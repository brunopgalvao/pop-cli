name: Test `pop install` on Ubuntu

on:
  push:
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install node-fetch
      run: npm install node-fetch

    - name: Get latest pop-cli release
      id: get_release
      run: |
        const fetch = require('node-fetch');
        const octokit = require('@octokit/rest')({
          request: { fetch }
        });
        const { data: releases } = await octokit.repos.listReleases({
          owner: "r0gue-io",
          repo: "pop-cli",
        });
        const latestRelease = releases[0];
        const asset = latestRelease.assets.find(asset => asset.name.endsWith("linux-gnu.tar.gz"));
        console.log(`::set-output name=asset_url::${asset.browser_download_url}`);

    - name: Download pop-cli release
      run: |
        wget ${{ steps.get_release.outputs.asset_url }}
        tar -xzf pop-x86_64-unknown-linux-gnu.tar.gz

    - name: Run Docker container
      id: docker_run
      run: |
        docker run -d pop-install-ubuntu
        echo "::set-output name=container_id::$(docker ps -q)"

    - name: Execute pop-cli binary
      run: |
        docker exec ${{ steps.docker_run.outputs.container_id }} ./pop-x86_64-unknown-linux-gnu/pop-cli
